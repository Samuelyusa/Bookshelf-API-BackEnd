{
	"id": "76b2e77e-632e-46f0-9f60-1156e8378d02",
	"name": "Bookshelf API Test",
	"timestamp": "2023-03-21T16:22:26.019Z",
	"collection_id": "22821136-66b61641-a4eb-4d9c-8c0e-92d6dc296a27",
	"folder_id": 0,
	"environment_id": "22821136-6dfa0fa8-8bc7-4a9c-a8a8-c97798d30d0e",
	"totalPass": 85,
	"totalFail": 19,
	"results": [
		{
			"id": "8358c720-cbb1-4354-aa70-c1b1d67afb73",
			"name": "[Mandatory] Add Book With Complete Data",
			"url": "http://localhost:9000/books",
			"time": 21,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"status code should be 201": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": false,
				"response body data should contain bookId": true
			},
			"testPassFailCounts": {
				"status code should be 201": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 0,
					"fail": 1
				},
				"response body data should contain bookId": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				21
			],
			"allTests": [
				{
					"status code should be 201": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": false,
					"response body data should contain bookId": true
				}
			]
		},
		{
			"id": "42f8b62f-28ef-4e6a-860b-4d3ce4296361",
			"name": "[Mandatory] Add Book With Finished Reading",
			"url": "http://localhost:9000/books",
			"time": 3,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"status code should be 201": false,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": false,
				"response body data should contain bookId": false
			},
			"testPassFailCounts": {
				"status code should be 201": {
					"pass": 0,
					"fail": 1
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 0,
					"fail": 1
				},
				"response body data should contain bookId": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"status code should be 201": false,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": false,
					"response body data should contain bookId": false
				}
			]
		},
		{
			"id": "b916565e-32c0-45f2-bba0-9b00e12c6629",
			"name": "[Mandatory] Add Book Without Name",
			"url": "http://localhost:9000/books",
			"time": 4,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"status code should be 400": false,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": false
			},
			"testPassFailCounts": {
				"status code should be 400": {
					"pass": 0,
					"fail": 1
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"status code should be 400": false,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": false
				}
			]
		},
		{
			"id": "5b045403-e1aa-4f46-82a7-c393e0fbe00f",
			"name": "[Mandatory] Add Book with Page Read More Than Page Count",
			"url": "http://localhost:9000/books",
			"time": 3,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"status code should be 400": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 400": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"status code should be 400": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "d8a77341-f4f4-4f59-a9de-625bddb2a403",
			"name": "[Mandatory] Get All Books",
			"url": "http://localhost:9000/books",
			"time": 10,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains two items": false,
				"the books should have contains only id, name, and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains two items": {
					"pass": 0,
					"fail": 1
				},
				"the books should have contains only id, name, and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains two items": false,
					"the books should have contains only id, name, and publisher property": true
				}
			]
		},
		{
			"id": "f6d65efc-e345-4fce-9996-ae07f4ce540b",
			"name": "[Mandatory] Get Detail Books With Correct Id",
			"url": "http://localhost:9000/books/wVtS1rmJFBQsuvfn",
			"time": 3,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"response code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should an object": true,
				"response body object should contain correct property and value": true,
				"response body data object should contain book object": true,
				"book object should contain correct property and value": true
			},
			"testPassFailCounts": {
				"response code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should contain correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should contain book object": {
					"pass": 1,
					"fail": 0
				},
				"book object should contain correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"response code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should an object": true,
					"response body object should contain correct property and value": true,
					"response body data object should contain book object": true,
					"book object should contain correct property and value": true
				}
			]
		},
		{
			"id": "09da8aa6-d95b-49a3-9b5c-f362288a309d",
			"name": "[Mandatory] Get Detail Finished Book",
			"url": "http://localhost:9000/books/",
			"time": 3,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"response code should be 200": false,
				"response header Content-Type should be application/json": true,
				"response body should an object": true,
				"response body object should contain correct property and value": false,
				"response body data object should contain book object": false,
				"book object should contain correct property and value": false
			},
			"testPassFailCounts": {
				"response code should be 200": {
					"pass": 0,
					"fail": 1
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should contain correct property and value": {
					"pass": 0,
					"fail": 1
				},
				"response body data object should contain book object": {
					"pass": 0,
					"fail": 1
				},
				"book object should contain correct property and value": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"response code should be 200": false,
					"response header Content-Type should be application/json": true,
					"response body should an object": true,
					"response body object should contain correct property and value": false,
					"response body data object should contain book object": false,
					"book object should contain correct property and value": false
				}
			]
		},
		{
			"id": "07cb27b8-caab-4a15-a8fc-5445eb2c67f2",
			"name": "[Mandatory] Get Detail Books With Invalid Id",
			"url": "http://localhost:9000/books/xxxxx",
			"time": 4,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"response code should be 404": true,
				"response header Content-Type should be application/json": true,
				"response body should an object": true,
				"response body object should contain correct property and value": true
			},
			"testPassFailCounts": {
				"response code should be 404": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should contain correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"response code should be 404": true,
					"response header Content-Type should be application/json": true,
					"response body should an object": true,
					"response body object should contain correct property and value": true
				}
			]
		},
		{
			"id": "65987336-88e6-44a8-a6ee-2570f7788748",
			"name": "[Mandatory] Update Book With Complete Data",
			"url": "http://localhost:9000/books/wVtS1rmJFBQsuvfn",
			"time": 3,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true,
				"when get detail books": true,
				"book object should contain updated values": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"when get detail books": {
					"pass": 1,
					"fail": 0
				},
				"book object should contain updated values": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true,
					"when get detail books": true,
					"book object should contain updated values": true
				}
			]
		},
		{
			"id": "a731eead-2381-434c-9a57-828527f704ec",
			"name": "[Mandatory] Update Book Without Name",
			"url": "http://localhost:9000/books/wVtS1rmJFBQsuvfn",
			"time": 4,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"status code should be 400": false,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": false
			},
			"testPassFailCounts": {
				"status code should be 400": {
					"pass": 0,
					"fail": 1
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"status code should be 400": false,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": false
				}
			]
		},
		{
			"id": "a22fe4d5-4f83-4663-8c87-807bc9d0396d",
			"name": "[Mandatory] Update Book With Page Read More Than Page Count",
			"url": "http://localhost:9000/books/wVtS1rmJFBQsuvfn",
			"time": 3,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"status code should be 400": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 400": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"status code should be 400": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "ac59c99f-04b6-435b-ac6b-d550fe4f7405",
			"name": "[Mandatory] Update Book with Invalid Id",
			"url": "http://localhost:9000/books/xxxxx",
			"time": 3,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"status code should be 404": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 404": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"status code should be 404": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "15b7ce05-80e3-47f0-8d41-61b074d821b9",
			"name": "[Mandatory] Delete Book with Correct Id",
			"url": "http://localhost:9000/books/wVtS1rmJFBQsuvfn",
			"time": 3,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true,
				"when get detail books": true,
				"The book should be not found": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"when get detail books": {
					"pass": 1,
					"fail": 0
				},
				"The book should be not found": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true,
					"when get detail books": true,
					"The book should be not found": true
				}
			]
		},
		{
			"id": "1ce7d142-9fc0-40c4-b4b9-25ed22545eb7",
			"name": "[Mandatory] Delete Finished book",
			"url": "http://localhost:9000/books/",
			"time": 3,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"status code should be 200": false,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": false,
				"when get detail books": true,
				"The book should be not found": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 0,
					"fail": 1
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 0,
					"fail": 1
				},
				"when get detail books": {
					"pass": 1,
					"fail": 0
				},
				"The book should be not found": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"status code should be 200": false,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": false,
					"when get detail books": true,
					"The book should be not found": true
				}
			]
		},
		{
			"id": "2eea5b22-dea3-45c7-af7b-6d432730b364",
			"name": "[Mandatory] Delete Book with Invalid Id",
			"url": "http://localhost:9000/books/xxxxx",
			"time": 3,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"status code should be 404": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 404": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"status code should be 404": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "0e27633b-71f3-4f97-a75b-ef9e9d9490fb",
			"name": "Add Reading and Finished Book",
			"url": "http://localhost:9000/books",
			"time": 3,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				3
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "acd8637b-eadc-4914-bd8d-c80004b2a4a8",
			"name": "Add Reading and Unfinished Book with \"Dicoding\" Name",
			"url": "http://localhost:9000/books",
			"time": 3,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				3
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "ef98b15b-3f79-4a8b-9c0a-6cede37045bb",
			"name": "Add Unreading Books and Unfinished Book \"Dicoding\" Name",
			"url": "http://localhost:9000/books",
			"time": 3,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				3
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "44207b29-1ec9-4d6d-b06e-a772ee10b91e",
			"name": "Add Unreading Books and Unfinished Book",
			"url": "http://localhost:9000/books",
			"time": 3,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				3
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "f61d0d16-7795-402c-bed0-1dfcabdf68eb",
			"name": "[Optional] Get All Reading Books",
			"url": "http://localhost:9000/books?reading=1",
			"time": 3,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains 2 items": false,
				"the books should have contains only name and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains 2 items": {
					"pass": 0,
					"fail": 1
				},
				"the books should have contains only name and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains 2 items": false,
					"the books should have contains only name and publisher property": true
				}
			]
		},
		{
			"id": "3443cc2b-c312-45c8-bde7-873624070cba",
			"name": "[Optional] Get All Unreading Books",
			"url": "http://localhost:9000/books?reading=0",
			"time": 2,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains at 2 items": false,
				"the books should have contains only name and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains at 2 items": {
					"pass": 0,
					"fail": 1
				},
				"the books should have contains only name and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains at 2 items": false,
					"the books should have contains only name and publisher property": true
				}
			]
		},
		{
			"id": "9c5b761d-0979-45e8-bfc7-0ba4e655a9a0",
			"name": "[Optional] Get All Finished Books",
			"url": "http://localhost:9000/books?finished=1",
			"time": 3,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains 1 items": false,
				"the books should have contains only name and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains 1 items": {
					"pass": 0,
					"fail": 1
				},
				"the books should have contains only name and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains 1 items": false,
					"the books should have contains only name and publisher property": true
				}
			]
		},
		{
			"id": "f771c2bf-fb97-450c-af23-2273b0b5a5f6",
			"name": "[Optional] Get All Unfinished Books",
			"url": "http://localhost:9000/books?finished=0",
			"time": 2,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains 3 items": true,
				"the books should have contains only name and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains 3 items": {
					"pass": 1,
					"fail": 0
				},
				"the books should have contains only name and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains 3 items": true,
					"the books should have contains only name and publisher property": true
				}
			]
		},
		{
			"id": "c7ab93bf-7a0e-4f28-a2ac-4d93d84b39b0",
			"name": "[Optional] Get All Books Contains \"Dicoding\" Name",
			"url": "http://localhost:9000/books?name=Dicoding",
			"time": 2,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains 2 items": false,
				"the books should have contains only name and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains 2 items": {
					"pass": 0,
					"fail": 1
				},
				"the books should have contains only name and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				2
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains 2 items": false,
					"the books should have contains only name and publisher property": true
				}
			]
		}
	],
	"count": 1,
	"totalTime": 97,
	"collection": {
		"requests": [
			{
				"id": "8358c720-cbb1-4354-aa70-c1b1d67afb73",
				"method": "POST"
			},
			{
				"id": "42f8b62f-28ef-4e6a-860b-4d3ce4296361",
				"method": "POST"
			},
			{
				"id": "b916565e-32c0-45f2-bba0-9b00e12c6629",
				"method": "POST"
			},
			{
				"id": "5b045403-e1aa-4f46-82a7-c393e0fbe00f",
				"method": "POST"
			},
			{
				"id": "d8a77341-f4f4-4f59-a9de-625bddb2a403",
				"method": "GET"
			},
			{
				"id": "f6d65efc-e345-4fce-9996-ae07f4ce540b",
				"method": "GET"
			},
			{
				"id": "09da8aa6-d95b-49a3-9b5c-f362288a309d",
				"method": "GET"
			},
			{
				"id": "07cb27b8-caab-4a15-a8fc-5445eb2c67f2",
				"method": "GET"
			},
			{
				"id": "65987336-88e6-44a8-a6ee-2570f7788748",
				"method": "PUT"
			},
			{
				"id": "a731eead-2381-434c-9a57-828527f704ec",
				"method": "PUT"
			},
			{
				"id": "a22fe4d5-4f83-4663-8c87-807bc9d0396d",
				"method": "PUT"
			},
			{
				"id": "ac59c99f-04b6-435b-ac6b-d550fe4f7405",
				"method": "PUT"
			},
			{
				"id": "15b7ce05-80e3-47f0-8d41-61b074d821b9",
				"method": "DELETE"
			},
			{
				"id": "1ce7d142-9fc0-40c4-b4b9-25ed22545eb7",
				"method": "DELETE"
			},
			{
				"id": "2eea5b22-dea3-45c7-af7b-6d432730b364",
				"method": "DELETE"
			},
			{
				"id": "0e27633b-71f3-4f97-a75b-ef9e9d9490fb",
				"method": "POST"
			},
			{
				"id": "acd8637b-eadc-4914-bd8d-c80004b2a4a8",
				"method": "POST"
			},
			{
				"id": "ef98b15b-3f79-4a8b-9c0a-6cede37045bb",
				"method": "POST"
			},
			{
				"id": "44207b29-1ec9-4d6d-b06e-a772ee10b91e",
				"method": "POST"
			},
			{
				"id": "f61d0d16-7795-402c-bed0-1dfcabdf68eb",
				"method": "GET"
			},
			{
				"id": "3443cc2b-c312-45c8-bde7-873624070cba",
				"method": "GET"
			},
			{
				"id": "9c5b761d-0979-45e8-bfc7-0ba4e655a9a0",
				"method": "GET"
			},
			{
				"id": "f771c2bf-fb97-450c-af23-2273b0b5a5f6",
				"method": "GET"
			},
			{
				"id": "c7ab93bf-7a0e-4f28-a2ac-4d93d84b39b0",
				"method": "GET"
			}
		]
	}
}